# -*- coding: utf-8 -*-
"""Group_FinalProject

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DjA85XGSB12zqU6N5I3dweWSPZmIYCu9
"""

from sklearn.neighbors import KNeighborsRegressor
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

proj = pd.read_csv("/content/2008.csv")
proj = proj.dropna(axis=0)

cat_cols = proj.select_dtypes(exclude = 'number')
num_cols = proj.select_dtypes(include = 'number')
onehot_cat_cols = pd.get_dummies(cat_cols)
onehot_cat_cols.head()
proj = pd.concat([num_cols,onehot_cat_cols],sort=True,axis=1)

y = proj["DepDelay"]
x = proj.drop("DepDelay", axis=1)

x_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.3,random_state=0)

from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import mean_squared_error 
from math import sqrt

rmse_val = []
for K in range(20):
    K = K+1
    model = KNeighborsRegressor(n_neighbors = K)
    model.fit(x_train, y_train)  #fit the model
    pred=model.predict(x_test) #make prediction on test set
    error = sqrt(mean_squared_error(y_test,pred)) #calculate rmse
    rmse_val.append(error) #store rmse values
    print('RMSE value for k= ' , K , 'is:', error)

import matplotlib.pyplot as plt
curve = pd.DataFrame(rmse_val) 
curve.plot()

model = KNeighborsRegressor(n_neighbors = 2)
model.fit(x_train, y_train)
pred=model.predict(x_test) 
print("{} NN Score: {:.2f}%".format(2, model.score(x_test, y_test)*100))

from sklearn.model_selection import KFold, cross_val_score
model = KNeighborsRegressor(n_neighbors=2)
ab = KFold(10)
CV_Scores = cross_val_score(model, x, y, cv=ab).mean()
print(CV_Scores)